{"version":3,"sources":["Components/AddCategory.js","Components/GridItem.js","helpers/fetchGifs.js","Components/Grid.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setCategory","useState","inputState","setinputState","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","placeholder","GridItem","url","title","className","src","alt","fetchGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","gif","id","tile","images","fixed_height","Grid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","App","ReactDOM","render","document","getElementById"],"mappings":"8KAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAhBW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,EAAYE,GACZC,EAAc,MAUlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SATc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,QASfG,YAAa,2BC1BhBC,EAAW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAE5B,OACI,qBAAKC,UAAW,2CAA4CC,IAAKH,EAAKI,IAAKH,K,uBCLtEI,EAAS,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEN,mCACTP,EAHe,uDAEN,mCAFM,cAGmDQ,UAAUF,GAH7D,sBAIEG,MAAMT,GAJR,cAIfU,EAJe,gBAMEA,EAASC,OANX,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAIE,KACXjB,IAAKe,EAAIG,OAAOC,aAAanB,QAXhB,kBAeda,GAfc,4CAAH,sDCITO,EAAO,SAAC,GAAkB,IAGnC,ECHwB,SAACd,GAEzB,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WAENnB,EAAUC,GAAUmB,MAAK,SAAAZ,GACrBa,YAAW,WACPH,EAAS,CACLX,KAAMC,EACNQ,SAAS,MAEd,WAGR,CAACf,IAEGgB,EDjBgBK,CAHW,EAAfrB,UAGLO,EAAd,EAAQD,KAGR,OACI,mCACI,qBAAKV,UAAU,eAAf,SAEQW,EAAKC,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,CAAUf,IAAKe,EAAIf,IAAKC,MAAOc,EAAId,OAAYc,EAAIC,YEX9DY,EAAM,WAEf,MAAgC1C,mBAAS,OAAzC,mBAAOoB,EAAP,KAAiBrB,EAAjB,KAEA,OACI,qCACI,sBAAKiB,UAAU,iBAAf,UACI,kDACA,cAAC,EAAD,CAAajB,YAAaA,OAE9B,cAAC,EAAD,CAAMqB,SAAUA,Q,MCT5BuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a5260e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n\r\n    const [inputState, setinputState] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputState.trim().length > 0) {\r\n            setCategory(inputState);\r\n            setinputState('');\r\n        }\r\n\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputState(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputState}\r\n                onChange={handleInputChange}\r\n                placeholder={\"Search something...\"}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const GridItem = ({ url, title }) => {\r\n    // https://animate.style/\r\n    return (\r\n        <img className={\"animate__animated animate__backInUp card\"} src={url} alt={title} />\r\n    );\r\n}\r\n","export const fetchGifs = async (category) => {\r\n\r\n    const APIKey = 'XETMpsYmiA3J11zhFZj7G0CCX8pRTyy6';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${APIKey}&q=${encodeURI(category)}&limit=10`;\r\n    const response = await fetch(url);\r\n\r\n    const { data } = await response.json();\r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.tile,\r\n            url: gif.images.fixed_height.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import { GridItem } from './GridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const Grid = ({ category }) => {\r\n\r\n\r\n    const { data: gifs } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"general_grid\">\r\n                {\r\n                    gifs.map(gif => (\r\n                        <GridItem url={gif.url} title={gif.title} key={gif.id} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { fetchGifs } from \"../helpers/fetchGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        fetchGifs(category).then(gifs => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                });\r\n            }, 1500);\r\n        });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { Grid } from './Components/Grid';\r\n\r\nexport const App = () => {\r\n\r\n    const [category, setCategory] = useState('Dog');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search_section\">\r\n                <h1>GIF SEARCHER APP</h1>\r\n                <AddCategory setCategory={setCategory} />\r\n            </div>\r\n            <Grid category={category} />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}